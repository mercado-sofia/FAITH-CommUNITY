.container {
  display: flex;
  height: 100vh;
}

.leftPane {
  width: 45%;
  min-width: 400px;
  position: relative;
  background: linear-gradient(22deg, rgba(26, 104, 91, 0.85) -1.39%, rgba(14, 204, 172, 0.85) 66.85%, rgba(89, 213, 128, 0.31) 100%);
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: flex-end;
  padding-right: 0;
}

.leftPane::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 440px;
  height: 380px;
  background: url('/login/top-icon.png');
  background-repeat: no-repeat;
  background-size: contain;
  z-index: 1;
  pointer-events: none;
}

.leftPane::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 280px;
  height: 300px;
  background: url('/login/bottom-icon.png');
  background-repeat: no-repeat;
  background-size: contain;
  z-index: 1;
  pointer-events: none;
}

.leftPane .signupLabel {
  position: relative;
  z-index: 2;
  background: white;
  padding: 1.3rem 2rem;
  border-top-left-radius: 14px;
  border-bottom-left-radius: 14px;
  font-size: 14px;
  font-weight: 600;
  font-family: var(--font-inter);
  color: #145c4e;
  cursor: default;
  box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.05);
}

 .rightPane {
   flex: 1;
   display: flex;
   flex-direction: column;
   justify-content: center;
   align-items: center;
   padding: 2rem;
   position: relative;
   z-index: 2;
 }

 .contentContainer {
   display: flex;
   flex-direction: column;
   justify-content: center;
   align-items: center;
   width: 100%;
   max-width: 450px;
 }

 .title {
   font-size: 1.8rem;
   color: #169c86;
   font-weight: bold;
   font-family: var(--font-inter);
   text-align: left;
   width: 100%;
   max-width: 450px;
 }
 
 .stepIndicator {
   display: flex;
   align-items: center;
   justify-content: flex-start;
   margin: 2rem 0;
   width: 100%;
   max-width: 450px;
 }

.step {
  display: flex;
  align-items: center;
  font-size: 12px;
  color: #b4b6b9;
  font-weight: 500;
}

.step.active {
  color: #0FC9A9;
  font-weight: 600;
}

 .stepNumber {
   width: 20px;
   height: 20px;
   border-radius: 50%;
   display: flex;
   align-items: center;
   justify-content: center;
   margin-right: 8px;
   font-size: 10px;
   font-weight: 600;
   background: #e0e0e0;
   color: #666;
 }

.step.active .stepNumber {
  background: #0FC9A9;
  color: white;
}

.stepDivider {
  width: 40px;
  height: 2px;
  background: #e0e0e0;
  margin: 0 12px;
}

 .stepDivider.active {
   background: #0FC9A9;
 }
 
  .stepSubheading {
    font-size: 13px;
    color: #6c757d;
    margin: 0 0 1.6rem;
    font-family: var(--font-inter);
    font-weight: 400;
    line-height: 1.4;
  }
 
  .form {
   width: 100%;
   max-width: 420px;
   display: flex;
   flex-direction: column;
 }

 .inputGroup {
   position: relative;
   margin-bottom: 1.2rem;
 }

 .nameRow {
   display: flex;
   gap: 1rem;
   margin-bottom: 1rem;
 }

 .genderBirthDateRow {
   display: flex;
   gap: 1rem;
   margin: 0.45rem 0 0.3rem;
 }

 .nameRow .inputGroup {
   flex: 1;
   margin-bottom: 0;
 }

 .fieldWrapper {
   flex: 1;
   display: flex;
   flex-direction: column;
 }

 .birthDateLabel {
   font-size: 13px;
   color: #b4b6b9;
   font-weight: 500;
   align-self: flex-start;
   margin-bottom: 0.25rem;
   transition: color 0.3s ease;
 }

 .birthDateLabel.focused {
  color: #13B79B;
}

/* Focus state for gender label when dropdown is open or focused */
.fieldWrapper:has(.customDropdown:has(.dropdownOptions)) .birthDateLabel,
.fieldWrapper:has(.customDropdown:has(.dropdownHeader.focused)) .birthDateLabel {
  color: #13B79B;
}

/* Error state for labels when fields have validation errors */
.fieldWrapper:has(.inputGroup:has(.inputError)) .birthDateLabel,
.fieldWrapper:has(.dateInputGroup:has(.inputError)) .birthDateLabel,
.fieldWrapper:has(.inputGroup:has(.customDropdown:has(.inputError))) .birthDateLabel {
  color: rgb(248, 1, 1) !important;
}

/* Direct error class for labels */
.birthDateLabel.labelError {
  color: rgb(248, 1, 1) !important;
}

 .birthDateInputs {
   display: flex;
   align-items: center;
   gap: 0.25rem;
 }

 .dateInputGroup {
   flex: 1;
   position: relative;
 }

 .dateInputGroup input {
   width: 100%;
   padding: 0.7rem 0.5rem;
   border: none;
   outline: none;
   border-bottom: 2px solid #e0e0e0;
   background: transparent;
   font-size: 14px;
   font-family: Arial, Helvetica, sans-serif;
   color: #000;
   transition: border-bottom-color 0.3s ease;
   text-align: center;
 }

 .dateInputGroup input:focus {
   border-bottom-color: #13B79B;
 }

 .dateInputGroup input:not(:placeholder-shown) {
   border-bottom-color: #13B79B;
 }

 .dateInputGroup input::placeholder {
   color: #CFCFCF;
 }

 .dateSeparator {
   font-size: 16px;
   color: #b4b6b9;
   font-weight: 500;
   margin: 0 0.1rem;
 }

.inputGroup input,
.inputGroup select,
.inputGroup textarea {
  width: 100%;
  padding: 0.7rem 1rem 0.7rem 2.3rem;
  border: none;
  outline: none;
  border-bottom: 2px solid #e0e0e0;
  background: transparent;
  font-size: 14px;
  font-family: Arial, Helvetica, sans-serif;
  color: #000;
  transition: border-bottom-color 0.3s ease;
}

.inputGroup input:focus,
.inputGroup select:focus,
.inputGroup textarea:focus,
.inputGroup input:not(:placeholder-shown),
.inputGroup textarea:not(:placeholder-shown) {
  border-bottom-color: #13B79B;
}

.inputGroup input::placeholder,
.inputGroup textarea::placeholder {
  color: #CFCFCF;
}

.inputGroup select {
  cursor: pointer;
  color: #CFCFCF;
}

.inputGroup select:focus,
.inputGroup.hasValue select {
  color: #000;
}

/* Style the select dropdown arrow */
.inputGroup select {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%23CFCFCF' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6,9 12,15 18,9'%3e%3c/polyline%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: right 0.5rem center;
  background-size: 1em;
  padding-right: 2rem;
}

.inputGroup select:focus,
.inputGroup.hasValue select {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%23000' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6,9 12,15 18,9'%3e%3c/polyline%3e%3c/svg%3e");
}



/* Custom Dropdown Styles */
.customDropdown {
  position: relative;
  width: 100%;
}

.dropdownHeader {
  width: 100%;
  padding: 0.7rem 1rem 0.7rem 2.3rem;
  border: none;
  outline: none;
  border-bottom: 2px solid #e0e0e0;
  background: transparent;
  font-size: 14px;
  font-family: Arial, Helvetica, sans-serif;
  color: #CFCFCF;
  transition: border-bottom-color 0.3s ease;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: space-between;
  position: relative;
  text-align: left;
}

/* Removed hover effect from dropdown header line */

/* Highlight when dropdown is focused/open */
.dropdownHeader.focused {
  border-bottom-color: #13B79B;
}

/* Highlight when dropdown has a selected value */
.dropdownHeader.hasValue {
  border-bottom-color: #13B79B;
}

.dropdownValue {
  color: #CFCFCF;
  transition: color 0.3s ease;
}

/* Highlight the text when dropdown has a selected value */
.dropdownHeader.hasValue .dropdownValue {
  color: #13B79B;
}

/* Highlight the text when dropdown is focused/open - but only if it has a value */
.dropdownHeader.focused.hasValue .dropdownValue {
  color: #13B79B;
}

.dropdownArrow {
  color: #CFCFCF;
  transition: all 0.3s ease;
  font-size: 12px;
}

.dropdownArrow.rotated {
  transform: rotate(180deg);
}

.dropdownOptions {
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  background: white;
  border: 1px solid #e0e0e0;
  border-top: none;
  border-radius: 0 0 8px 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  z-index: 1000;
  max-height: 200px;
  overflow-y: auto;
}

.dropdownOption {
  padding: 0.75rem 1rem;
  cursor: pointer;
  font-size: 14px;
  font-family: var(--font-inter);
  color: #333;
  transition: all 0.2s ease;
  border-bottom: 1px solid #f0f0f0;
}

.dropdownOption:hover {
  background-color: #f0f8f6;
  color: #169c86;
}

.dropdownOption.selected {
  background-color: #e3f2fd;
  color: #169c86;
  font-weight: 500;
}

.dropdownOption:last-child {
  border-bottom: none;
}

.customDropdown .icon {
  position: absolute;
  top: 48%;
  left: 0.7rem;
  font-size: 14px;
  transform: translateY(-50%);
  color: #CFCFCF;
  transition: color 0.3s ease;
  z-index: 1;
}

.customDropdown:has(.dropdownHeader.focused) .icon,
.customDropdown:has(.dropdownOptions) .icon {
  color: #13B79B;
}

/* Ensure icon changes color when dropdown is focused */
.dropdownHeader.focused + .customDropdown .icon,
.customDropdown:has(.dropdownHeader.focused) .icon {
  color: #13B79B;
}

.inputGroup textarea {
  resize: none;
  min-height: auto;
  font-family: inherit;
}

.icon {
  position: absolute;
  top: 48%;
  left: 0.7rem;
  font-size: 14px;
  transform: translateY(-50%);
  color: #CFCFCF;
  transition: color 0.3s ease;
}

.inputGroup:has(input:focus) .icon,
.inputGroup:has(select:focus) .icon,
.inputGroup:has(textarea:focus) .icon,
.inputGroup:has(input:not(:placeholder-shown)) .icon,
.inputGroup:has(textarea:not(:placeholder-shown)) .icon,
.inputGroup:has(.customDropdown:has(.dropdownHeader.focused)) .icon {
  color: #13B79B;
}

/* Additional focus states for better browser compatibility */
.inputGroup input:focus ~ .icon,
.inputGroup select:focus ~ .icon,
.inputGroup textarea:focus ~ .icon {
  color: #13B79B;
}

/* Target the gender icon specifically when dropdown is focused */
.inputGroup:has(.customDropdown:has(.dropdownHeader.focused)) .icon {
  color: #13B79B !important;
}

/* Target the gender icon when inputGroup is focused */
.inputGroup.focused .icon {
  color: #13B79B !important;
}

/* Ensure all icons change color when inputGroup has focused class */
.inputGroup.focused .icon {
  color: #13B79B !important;
}

/* Disabled state for dropdown */
.dropdownHeader.disabled {
  opacity: 0.6;
  cursor: not-allowed;
  pointer-events: none;
}

.inputGroup.hasValue .icon,
.inputGroup.hasValue select {
  color: #13B79B;
  border-bottom-color: #13B79B;
}

.passwordToggle {
  position: absolute;
  top: 50%;
  right: 1rem;
  transform: translateY(-50%);
  background: none;
  border: none;
  font-size: 14px;
  cursor: pointer;
  color: #CFCFCF;
  padding: 0;
}

.passwordToggle:hover {
  color: #13B79B;
}

.passwordToggle:disabled {
  color: #adb5bd;
  cursor: not-allowed;
}

.inputError {
  border-bottom-color: #dc3545 !important;
}

.inputError:focus {
  border-bottom-color: #dc3545 !important;
}

.inputGroup:has(.inputError) .icon {
  color: #e63a3a !important;
}

/* Label error styling */
.labelError {
  color: #dc3545 !important;
}

.errorMessage {
  font-size: 13px;
  color: rgb(248, 1, 1);
  margin-bottom: 0.8rem;
  align-self: flex-start;
  text-align: left;
}

.passwordRequirements {
  margin: 0.5rem 0 1.5rem;
  padding: 0;
}

.passwordRequirements h4 {
  font-size: 12px;
  font-weight: 600;
  color: #495057;
  margin: 0 0 0.75rem 0;
  font-family: var(--font-inter);
}

.passwordRequirements ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

.passwordRequirements li {
  display: flex;
  align-items: center;
  font-size: 11px;
  color: #6c757d;
  margin-bottom: 0.5rem;
  font-family: var(--font-inter);
  transition: color 0.3s ease;
}

.passwordRequirements li:last-child {
  margin-bottom: 0;
}

.passwordRequirements li.requirementMet {
  color: #28a745;
}

.checkIcon {
  margin-right: 0.5rem;
  font-size: 14px;
  font-weight: bold;
  color: #6c757d;
  transition: color 0.3s ease;
}

.requirementMet .checkIcon {
  color: #28a745;
}

.buttonGroup {
  display: flex;
  gap: 1rem;
  margin-top: 0.8rem;
}

.nextBtn,
.prevBtn,
.signupBtn {
  flex: 1;
  padding: 1rem;
  font-size: 14px;
  font-weight: 600;
  letter-spacing: 1px;
  color: white;
  cursor: pointer;
  border-radius: 16px;
  border: 8px solid #FFF;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
}

.nextBtn,
.signupBtn {
  background: linear-gradient(90deg, #237E6F 0%, #0ECCAC 100%);
  box-shadow: 0px 30px 60px -20px rgba(26, 104, 91, 0.40);
}

.nextBtn:hover:not(:disabled),
.signupBtn:hover:not(:disabled) {
  filter: brightness(1.05);
}

.prevBtn {
  background: linear-gradient(90deg, #6c757d 0%, #adb5bd 100%);
  box-shadow: 0px 30px 60px -20px rgba(108, 117, 125, 0.40);
}

.prevBtn:hover:not(:disabled) {
  filter: brightness(1.05);
}

.nextBtn:disabled,
.prevBtn:disabled,
.signupBtn:disabled {
  opacity: 0.7;
  cursor: not-allowed;
  filter: none;
}

.nextBtn:focus,
.prevBtn:focus,
.signupBtn:focus {
  outline: none;
}

.loginLink {
  text-align: center;
  margin-top: 1.4rem;
}

.loginLink p {
  color: #666;
  font-size: 12px;
  font-family: var(--font-inter);
}

.loginButton {
  background: none;
  border: none;
  color: #169c86;
  font-size: 13px;
  cursor: pointer;
  text-decoration: underline;
  font-family: var(--font-inter);
}

.loginButton:hover {
  color: #0ECCAC;
}

/* Responsive Design */
@media (max-width: 768px) {
  .container {
    flex-direction: column;
  }
  
  .leftPane {
    display: none;
  }
  
  .rightPane {
    padding: 2rem 1rem 1rem;
  }
  
  .form {
    max-width: 100%;
  }
  
  .title {
    font-size: 1.75rem;
  }
}

.spinner {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

@media (max-width: 480px) {
  .rightPane {
    padding: 1.5rem 1rem 1rem;
  }
  
  .form {
    gap: 1rem;
  }
  
  .title {
    font-size: 1.5rem;
  }
  
  .inputGroup input,
  .inputGroup select,
  .inputGroup textarea {
    padding: 0.6rem 0.75rem 0.6rem 2.2rem;
    font-size: 13px;
  }
  
  .buttonGroup {
    flex-direction: column;
  }
}
